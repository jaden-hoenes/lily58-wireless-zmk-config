/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos { compatible = "zmk,combos"; };

    behaviors {
        lpht: lpht {
            compatible = "zmk,behavior-hold-tap";
            label = "LPHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            retro-tap;
            hold-trigger-key-positions = <30 31 33 34 35 43 44 45 46 47 48 49 54 55 56 57 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 43 44 45 46 47 48 49 54 55 56 57>;
        };

        rpht: rpht {
            compatible = "zmk,behavior-hold-tap";
            label = "RPHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            retro-tap;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 42 50 51 52 53>;
        };

        meh: meh {
            compatible = "zmk,behavior-hold-tap";
            label = "MEH";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <28 27 26 25 13 14 15 16 29 17 18 30 19 20 21 34 22 33 32 31>;
            flavor = "tap-unless-interrupted";
            retro-tap;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            display-name = "Base";
            bindings = <
&kp TAB     &kp GRAVE  &kp LESS_THAN  &kp PLUS  &kp SEMICOLON  &kp BACKSLASH                                                     &kp SLASH              &kp EQUAL  &kp MINUS  &kp GREATER_THAN  &kp ASTRK     &none
&kp ESC     &kp Q      &kp W          &kp E     &kp R          &kp T                                                             &kp Y                  &kp U      &kp I      &kp O             &kp P         &none
&kp LSHIFT  &kp A      &kp S          &kp D     &kp F          &kp G                                                             &kp H                  &kp J      &kp K      &kp L             &kp DOT       &kp BACKSPACE
&kp RET     &kp Z      &kp X          &kp C     &kp V          &kp B                 &kp LBKT                         &kp RBKT   &kp N                  &kp M      &kp COMMA  &kp SINGLE_QUOTE  &kp QUESTION  &kp RET
                                      &none     &mo 1          &kp LEFT_PARENTHESIS  &meh RG(RC(RA(RSHIFT))) SPACE    &kp SPACE  &kp RIGHT_PARENTHESIS  &mo 2      &none
            >;
        };

        numbers {
            bindings = <
&trans  &trans        &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans   &trans
&trans  &kp F1        &kp F2  &kp F3  &kp F4  &kp F5                    &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &trans
&trans  &kp NUMBER_1  &kp N2  &kp N3  &kp N4  &kp N5                    &kp N6  &kp N7  &kp N8  &kp N9  &kp N0   &trans
&trans  &trans        &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans   &trans
                              &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };

        special_characters {
            bindings = <
&trans  &trans  &trans  &trans  &trans                &trans                            &trans           &trans                 &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &kp LESS_THAN         &trans                            &trans           &kp GREATER_THAN       &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &kp LEFT_PARENTHESIS  &kp LEFT_BRACE                    &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &kp LEFT_BRACKET      &trans          &trans    &trans  &trans           &kp RIGHT_BRACKET      &trans  &trans  &trans  &trans
                        &trans  &trans                &trans          &trans    &trans  &trans           &trans                 &trans
            >;
        };
    };
};
